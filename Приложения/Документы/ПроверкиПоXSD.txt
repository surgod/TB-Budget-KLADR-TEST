ТББ_Отчетность.Проверки.CheckXsd

интерфейс

var LogFile: string; -- файл протокола
func GetErrors(sPathXML:String ;sPathXSD:String; sNameSpace:String): Integer;
proc ViewErrors   раб.xml.ПоказатьОшибки(false,sErrLogFile);
--func SaveLog(sLogFile: string): logical; -- сохраняет



если задан LogFile, то при просмотре в качестве опции выполняется вывод в log файл




проблема:
Необходимо скопировать файлы xsd локально.

Причем, необходима папка целиком.
Поэтому:
1) Создаем перечислимый тип tXmlDocType
   значения:
   tXmlDocPFR_ODB1_2019
   tXmlDocPFR_SZVSTAJ_2019
   tXmlDocPFR_SZVM_2017
   tXmlDocPFR_TD_2019
   tXmlDoc2NDFL_506
   tXmlDoc2NDFL_505
   tXmlDoc6NDFL_501
   tXmlDoc6NDFL_502

2) Значение типа документа определяет папку проекта, в которой
   По типу документа определяем папку проекта, где xsd-шки

3) копируем эту папку из проекта в локальную папку

4) В этой же папке создаем лог. Имя лога по имени проверяемого файла.

5) В методе savelog копируем лог в указанный файл.

6) Запоминаем имя проверяемого файла и имя файла со временным логом.

7) при удалении - удаляфем временные файлы










- Расширенна работа с кодировками. Поддерживаются однобайтовые кодовые
  страницы, отличные от текущей страницы windows. Для этого:

  - В диалоге выбора файлов, а также во всех диалогах где задается
    кодовая страница в список добавлен элемент "Другая...", при его выборе
    появляется диалог в котором можно ввести номер кодовой страницы,
    например 1251 - Cyrillic (Windows)

    Список остальных кодовых страниц:
    https://msdn.microsoft.com/ru-ru/library/windows/desktop/dd317756(v=vs.85).aspx

    Не поддерживаются:
      12000 - UTF-32
      12001 - UTF-32 BE
      65000 - UTF-7

  - Класс ТБ.Скрипт TextFile, конструктор Create: необязательный параметр Encoding
    теперь имеет тип Variant. В качестве значения можно передать элемент 
    перечислимого типа TextFile.Encodings либо числовой номер кодовой страницы.
    Кроме того поддерживается логическое значение (True - Ansi, False - OEM),
    что делает конструктор совместимым со старыми версиями T9 <= 9.3

    Аналогичные доработки сделаны в классах Importer/Exporter, System.AddCRC32/CRC64
    и Console.OpenEditor

  - Класс ТБ.Скрипт TextFile, добавлено свойство: BOM :Logical, с помощью которого
    можно узнать имеет ли открытый текстовый файл BOM (Byte Order Mark). Кроме того,
    свойство доступно на запись, с помощью него можно записать BOM в начало созданного
    текстового файла. Файл должен быть в юникодной кодировке и запись BOM должна 
    быть сделана до любой другой записи в файл:

    with TextFile.Create("file.txt", fmCreate, TextFile.UTF8) do
      BOM = True;
      writeln("...");
      --...
    end;


